#convert_panic_to_exception

mod ::std {
    type option::Option<&i32> {
        #layout(size = 8, align = 8);
        wellknown_traits(Copy);

        fn unwrap(self) -> &i32;
    }
    
    mod vec {
        type IntoIter<i32> {
            #layout(size = 32, align = 8);

            fn sum<i32>(self) -> i32;
        }

        type Vec<i32> {
            #layout(size = 24, align = 8);
            wellknown_traits(Debug);

            fn new() -> Vec<i32>;
            fn push(&mut self, i32);
            fn clone(&self) -> Vec<i32>;
            fn get(&self, usize) -> ::std::option::Option<&i32> deref [i32];
            fn into_iter(self) -> ::std::vec::IntoIter<i32>;
        }
    }
}
